<h1 align="center">🛍️ FakeStore E-commerce Clone</h1>

<p align="center">
  A full-stack simulation of a modern e-commerce storefront powered by real-time API scraping using Python + a sleek front-end interface.
</p>

<p align="center">
  <img src="https://img.shields.io/badge/Python-3.8+-blue?logo=python" />
  <img src="https://img.shields.io/badge/API-FakeStoreAPI-29a19c?logo=web" />
  <img src="https://img.shields.io/badge/Data-Scraping-orange?logo=json" />
  <img src="https://img.shields.io/badge/Frontend-HTML/CSS/JS-yellowgreen?logo=html5" />
</p>

---

## 📌 Project Overview

This project demonstrates a fully responsive **E-commerce Web UI** powered by real-time data scraping from the [FakeStore API](https://fakestoreapi.com/). Built in **Python**, the scraper collects and cleans product data and exports it in **JSON and CSV formats**, which is then used by a custom-designed frontend to simulate a real store.

---

## 🛠️ Tech Stack

| Layer       | Tech Used                      |
|------------|--------------------------------|
| Data Source| [FakeStoreAPI](https://fakestoreapi.com/) |
| Backend    | Python, `requests`, `csv`, `json` |
| Frontend   | HTML5, CSS3, Vanilla JS        |
| Output     | `products_data.csv`, `ecommerce_data.json` |

---

## 📂 File Structure

📦 FakeStore-Clone
├── main.py # Python scraper script
├── products_data.csv # CSV data output (auto-generated)
├── ecommerce_data.json # JSON data output (auto-generated)
└── index.html # Interactive store UI using scraped data

yaml
Copy
Edit

---

## ⚙️ How to Run

### 1. Clone the Repo

```bash
git clone https://github.com/yourusername/fakestore-ecommerce-clone.git
cd fakestore-ecommerce-clone
2. Install Python Dependencies
bash
Copy
Edit
pip install requests
3. Run the Scraper
bash
Copy
Edit
python main.py
This will create:

products_data.csv

ecommerce_data.json

4. Open the Store Frontend
Just open index.html in your browser:

bash
Copy
Edit
start index.html    # Windows
open index.html     # macOS
Make sure ecommerce_data.json is in the same directory as the HTML file.

✨ Features
✅ Real-time API scraping

📁 Exports data to both CSV and JSON

🔍 Live product search

🧩 Category filtering with icons

🛒 Interactive add-to-cart button

📱 Fully responsive design

🕒 Includes metadata like scraped_at

📸 UI Preview
Add screenshots inside a screenshots/ folder and update the links below.

Hero Section	Categories	Products Grid

🧠 Example Metadata
json
Copy
Edit
{
  "metadata": {
    "source": "https://fakestoreapi.com",
    "scraped_at": "2025-07-07T11:12:00",
    "total_products": 20,
    "total_categories": 4
  }
}
🔧 Future Enhancements
 Product detail modal or page

 Cart persistence using localStorage

 Backend integration with Flask or FastAPI

 Deploy as full-stack app (e.g., with React)

